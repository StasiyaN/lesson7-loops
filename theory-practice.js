/*
loops
–°–æ—Å—Ç–æ—è—Ç –∏–∑ —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ –∏ —É—Å–ª–æ–≤–∏—è
–ø—Ä–∞–≤–∏–ª–æ: –ø–æ–∫–∞ —Å—Ç–∞–∫–∞–Ω –Ω–µ –ø–æ–ª–Ω—ã–π –Ω–∞–ª–∏–≤–∞–π
*/

// break vs continue

apples = [
    {
        apple : 1,
        isRotten: false
    },
    {
        apple : 2,
        isRotten: true
    },
    {
        apple : 3,
        isRotten: false
    },

    {
        apple : 4,
        isRotten: true
    }
]
//continue
for (let i =0; i < apples.length; i++) {
    if (apples[i]. isRotten) {
        continue;// –ü—Ä–æ–ø—É—Å—Ç–∏ —ç—Ç–æ —è–±–ª–æ–∫–æ, –∏–¥–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É
    }
    console.log(apples[i]); // –°—ä–µ—Å—Ç—å —Ö–æ—Ä–æ—à–µ–µ —è–±–ª–æ–∫–æ
}

/* "–§—É, —ç—Ç–æ –≥–Ω–∏–ª–æ–µ. –ü—Ä–æ–ø—É—Å–∫–∞—é. –°–ª–µ–¥—É—é—â–µ–µ!"
‚Äî –¢—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ—à—å –ø–µ—Ä–µ–±–∏—Ä–∞—Ç—å —è–±–ª–æ–∫–∏, –ø–æ–∫–∞ –≤—Å–µ –Ω–µ –ø—Ä–æ–≤–µ—Ä–∏—à—å.*/

//break
for (let i =0; i < apples.length; i++) {
    if (apples[i].isRotten) {
        break;
    }
    console.log(apples[i]);
}


//for

for (let i = 0; i < 4; i++) {
    console.log(i);
}

/*
i = index
–ø—Ä–∏—Ä–∞–≤–Ω–∏–≤–∞–µ–º i –∫ 0 - i : 0
–ø—Ä–æ–≤–µ—Ä—è–µ–º i –º–µ–Ω—å—à–µ 0 –∏–ª–∏ –Ω–µ—Ç - i < 4 ? true
—É–≤–µ–ª–∏—á–∏–≤–∞–∏–≤–∞–µ–º i –Ω–∞ 1
console log –≤—ã–¥–æ–¥–∏—Ç 1
–æ–ø—è—Ç—å–± –ø—Ä–æ–≤–µ—Ä—è–µ–º ( —Ç–µ–ø–µ—Ä—å i —Ä–∞–≤–Ω–æ 1)
i = 1 < 4 ? true
console.log 2 (1+1)

i = 2 < 4 ? true
console log 3 (2 + 1)

*/

const books = [
    {
        name: 'To Kill a Mockingbird',
        year: '1960'
    },
    {
        name: '1984',
        year: '1949'
    },
    {
        name: 'The Great Gatsby',
        year: '1925'
    },
    {
        name: 'Pride and Prejudice',
        year: '1813'
    },
    {
        name: 'The Catcher in the Rye',
        year: '1951'
    },
    {
        name: 'Harry Potter and the Philosopher‚Äôs Stone',
        year: '1997'
    }
]

for (let i = 0; i < books.length; i++) {
    console.log(`${books[i].name} - ${books[i].year}`);
}

// =

for (let book of books) {
    console.log(`${book.name} - ${book.year}`);
}

// =
for (let key in books) {
    if (key === 'name') {
        break;
    }
    console.log(key, books[key]);
}

//gpt example
/* –ó–∞–¥–∞—á–∞:
–ï—Å—Ç—å –¥–≤–∞ —Ç–∞–π–º–µ—Ä–∞:
‚Äî –æ–¥–∏–Ω –æ—Ç—Å—á–∏—Ç—ã–≤–∞–µ—Ç –≤–ø–µ—Ä—ë–¥ (–≤—Ä–µ–º—è —Å –Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å–∫–∞)
‚Äî –¥—Ä—É–≥–æ–π –æ—Ç—Å—á–∏—Ç—ã–≤–∞–µ—Ç –Ω–∞–∑–∞–¥ (–≤—Ä–µ–º—è –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞)

–ö–∞–∂–¥—ã–π —à–∞–≥ = 1 —Å–µ–∫—É–Ω–¥–∞

–ö–æ–≥–¥–∞ –æ–Ω–∏ –≤—Å—Ç—Ä–µ—Ç—è—Ç—Å—è –∏–ª–∏ –ø–µ—Ä–µ—Å–µ–∫—É—Ç—Å—è ‚Üí —Ü–∏–∫–ª –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è*/
function tickTimers(up, down) {
    console.log(`‚è± –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —à–∞–≥–∞: –ø—Ä–æ—à–ª–æ ${up} —Å–µ–∫, –æ—Å—Ç–∞–ª–æ—Å—å ${down} —Å–µ–∫`);
    return[up +1, down -1];
}

let timePassed = 0;
let timeLeft = 10;

for (; timePassed <= timeLeft; [timePassed, timeLeft] = tickTimers(timePassed, timeLeft)) {
    console.log(`üîÅ –í–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–∞: –ø—Ä–æ—à–ª–æ ${timePassed} —Å–µ–∫, –æ—Å—Ç–∞–ª–æ—Å—å ${timeLeft} —Å–µ–∫`);
}

/*üîç –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:
timePassed —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è ‚Äî –∫–∞–∫ —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä.

timeLeft —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è ‚Äî –∫–∞–∫ –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç.

–¶–∏–∫–ª –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è, –ø–æ–∫–∞ timePassed <= timeLeft

–ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è tickTimers, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è.

*/
//while

let i = 0;
while (i < 5) {
    console.log('I am still working - ' + i)
    i++
}

let word ='';
while (word.length < 5) {
    const value = prompt ('Enter the letter')
    if (value.length === 0) {
        break;
    }
    word = word + value;
    console.log(word);
}

// do ... while
let h = 5;
do {
    console.log(h);
    h++;
} while (h < 5);

// for ... in

const person = {
    name: 'John',
    age: 25,
    city: 'Paris'
};
//–ø–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –∫–ª—é—á—É
console.log(person.city);
console.log(person['city'])

for (let key in person) {
    console.log(key + '-' +person[key]);
}